# File: system_files/usr/lib/systemd/system/distinction-tpm-monitor.service
[Unit]
Description=DistinctionOS TPM Recovery Monitor
After=multi-user.target
Wants=distinction-tpm-monitor.timer

[Service]
Type=simple
ExecStart=/usr/bin/distinction-tpm-monitor --monitor
Restart=on-failure
RestartSec=30
StandardOutput=journal
StandardError=journal

# Security hardening
PrivateTmp=yes
ProtectSystem=strict
ReadWritePaths=/var/lib/distinction-tpm /var/log
ProtectHome=yes
NoNewPrivileges=yes

[Install]
WantedBy=multi-user.target

---

# File: system_files/usr/lib/systemd/system/distinction-tpm-monitor.timer
[Unit]
Description=Periodic TPM Recovery Check
Requires=distinction-tpm-monitor.service

[Timer]
# Run 5 minutes after boot
OnBootSec=5min
# Then every 30 minutes
OnUnitActiveSec=30min
Persistent=true

[Install]
WantedBy=timers.target

---

# File: system_files/usr/lib/systemd/system/distinction-tpm-check@.service
# Template service for rpm-ostree post-deployment hooks
[Unit]
Description=TPM Check After RPM-OSTree Deployment
After=rpm-ostreed.service

[Service]
Type=oneshot
ExecStart=/usr/bin/distinction-tpm-post-deploy
StandardOutput=journal
StandardError=journal

---

# File: system_files/usr/bin/distinction-tpm-post-deploy
#!/usr/bin/env bash
# Post-deployment hook for rpm-ostree
set -euo pipefail

LOG_FILE="/var/log/distinction-tpm-monitor.log"

log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] POST-DEPLOY: $1" >> "$LOG_FILE"
}

log_message "RPM-OSTree deployment detected"

# Check if the deployment changed critical components
if /usr/bin/distinction-tpm-monitor --check &>/dev/null; then
    log_message "Critical boot components will change"
    
    # Send urgent notification
    notify-send --urgency=critical \
        "⚠ TPM Unlock Action Required" \
        "System update will break TPM unlock. Run 'ujust distinction-tpm-reenrol' before rebooting!" \
        --icon=security-high-symbolic
    
    # Create a flag file for the next boot
    touch /var/lib/distinction-tpm/pending-reenrol
    
    # Also create a wall message for all terminals
    wall "WARNING: System update detected that will break TPM unlock. Run 'sudo distinction-tpm-monitor --reenrol' before rebooting!"
else
    log_message "No critical changes detected"
fi

---

# File: system_files/etc/rpm-ostreed.conf.d/distinction-tpm.conf
# RPM-OSTree configuration for post-deployment hooks
[Daemon]
AutomaticUpdatePolicy=check

[Experimental]
# Enable deployment finalization hooks
DeploymentFinalizationHooks=true

---

# File: system_files/usr/share/DistinctionOS/just/tpm-maintenance.just
# Quick maintenance commands for TPM management

# Quick re-enrollment after system update
distinction-tpm-reenrol:
    #!/usr/bin/env bash
    echo "🔄 Quick TPM Re-enrollment"
    echo "══════════════════════════"
    sudo distinction-tpm-monitor --reenrol

# Check if re-enrollment is needed
distinction-tpm-check:
    #!/usr/bin/env bash
    echo "🔍 Checking for system changes..."
    if sudo distinction-tpm-monitor --check; then
        echo "⚠ Changes detected - TPM re-enrollment recommended!"
        echo "Run: ujust distinction-tpm-reenrol"
    else
        echo "✅ No changes detected - TPM unlock should work fine"
    fi

# Force immediate check (useful after manual updates)
distinction-tpm-force-check:
    #!/usr/bin/env bash
    echo "🔄 Forcing TPM monitor check..."
    sudo systemctl restart distinction-tpm-monitor.service
    sleep 2
    sudo journalctl -u distinction-tpm-monitor.service -n 20

# View TPM monitor logs
distinction-tpm-logs:
    #!/usr/bin/env bash
    echo "📋 Recent TPM Monitor Activity"
    echo "══════════════════════════════"
    sudo journalctl -u distinction-tpm-monitor.service -n 50 --no-pager